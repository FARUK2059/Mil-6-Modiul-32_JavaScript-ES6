// sept 1 

// JavaScript এ callback function হলো এমন একটি ফাংশন যা অন্য একটি ফাংশনের প্রথম বা শেষ প্যারামিটার হিসেবে পাঠানো হয়। এই callback function গুলো অন্য ফাংশনের কাজ সম্পন্ন করার সময় কল করা হয়।

// একটি উদাহরণ দেখা যাক:


// একটি সিম্পল ফাংশন যা একটি ফাংশন নেওয়ার পরিবর্তে সেটিকে ডেটা হিসেবে পাঠায়
function processUserData(data, callback) {
    // কোন ধরণের প্রসেসিং করা হবে, এটি নির্ভর করবে ডেটার ধরণে
    console.log("Processing user data...");
    // ডেটা প্রসেসিং সম্পন্ন হলে, কলব্যাক ফাংশন কল করা হবে
    callback(data);
}

// একটি কলব্যাক ফাংশন যা ডেটা রিসিভ করে প্রিন্ট করে
function displayUserData(data) {
    console.log("User data received:", data);
}

// processUserData ফাংশনকে কল করা, এবং এটির কাজ সম্পন্ন হলে displayUserData কল হবে
processUserData({ name: "John", age: 30 }, displayUserData);

// উপরের উদাহরণে, processUserData ফাংশনে ডেটা এবং একটি callback ফাংশন গ্রহণ করে। ফাংশনটি ডেটা প্রসেস করার পরে সে callback ফাংশনটি কল করে ডেটা প্রেরণ করে। এখানে displayUserData হলো একটি callback ফাংশন যা ডেটা গ্রহণ করে এবং প্রিন্ট করে।

// এই callback function গুলি অনেকবার অ্যাসিংক্রোনাস ফাংশনের ক্ষেত্রে ব্যবহার করা হয় যাতে অপারেশন সম্পন্ন হওয়ার পরে কিছু কাজ সম্পন্ন করা যায়।



//***********************-*/  Step 2


// JavaScript-এ, ক্যালব্যাক ফাংশন হলো একটি ফাংশন যা অন্য একটি ফাংশনকে যেভাবে একটি প্যারামিটার হিসেবে নেয় এবং সেই ফাংশনটির পরবর্তী কাজ করার জন্য সেই ফাংশনকে কল করে।

// ক্যালব্যাক ফাংশনগুলি মূলত একটি ফাংশনের আরও একটি ফাংশনে প্রয়োজন হলে বা একটি অ্যাসিঞ্ক্রোনাস অপারেশন পূর্ণ হওয়ার পরে কল করা হয়।

// একটি সাধারণ উদাহরণ দেখা যাক:

// একটি সিম্পল সিংক্রোনাস ফাংশন
function greet(name) {
    console.log('Hello, ' + name + '!');
}

// একটি ক্যালব্যাক ফাংশন যা আবার একটি ফাংশনকে কল করে
function processUserInput(callback) {
    var name = prompt('Please enter your name:');
    callback(name);
}

// ক্যালব্যাক ফাংশন ব্যবহার করা
processUserInput(greet);


// উপরের উদাহরণে, processUserInput ফাংশনটি ক্যালব্যাক হিসেবে greet ফাংশনকে নেয় এবং একটি ইনপুট চাইতে সিঙ্গল প্রম্পট দেয়। ব্যবহারকারী ইনপুট প্রদান করলে, এটি greet ফাংশনকে কল করে এবং ব্যবহারকারীর নাম দিয়ে একটি স্বাগত বার্তা প্রিন্ট করে।

// এটি একটি বিভিন্ন ধরণের কাজ করার উদাহরণ হিসেবে অভিজ্ঞান হতে পারে, যেমন ফাইল ডাউনলোড, নেটওয়ার্ক রিকোয়েস্ট, ওয়েব এপ্লিকেশন এর ইভেন্ট হ্যান্ডলিং ইত্যাদি।

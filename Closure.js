// Closer function mathod

// JavaScript একটি ফাংশনাল প্রোগ্রামিং ভাষা, এবং এটি ফাংশনগুলিকে ভেরিয়েবলে সংরক্ষণ করতে এবং অন্য ফাংশনের মধ্যে পাঠানোর জন্য সমর্থ করে। যখন একটি ফাংশন একটি বাহ্যিক ফাংশনের ভেতরে তৈরি হয় এবং সেই বাহ্যিক ফাংশনের স্কোপের বাহ্যিক ভেরিয়েবল বা ফাংশনের সাথে কোনো যোগাযোগের প্রয়োজন হয়, তখন একটি ক্লোজার তৈরি হয়।

// এটি সহজ ভাষায়, একটি ফাংশনের একটি সংজ্ঞার স্কোপ এবং সমস্ত স্কোপের সাথে যোগাযোগের প্রয়োজন হলে, সেই ফাংশনের ক্লোজারে রাখা হয় সেটি মনে করা যে এটি তৈরি হয়েছিল। একটি ক্লোজার একটি মেমোরি স্থানান্তরের কারণে তৈরি হয় যার মাধ্যমে একটি বাহ্যিক ফাংশনের সকল ভেরিয়েবল এবং স্কোপের মান সংরক্ষণ করা হয়।

// একটি সাধারণ উদাহরণ দেখা যাক:

function outerFunction(outerVariable) {
    // বাহ্যিক ফাংশন
    function innerFunction(innerVariable) {
        // এই innerFunction হলো একটি ক্লোজার
        return outerVariable + innerVariable;
    }
    return innerFunction; // ক্লোজারকে রিটার্ন করা হয়
}

// বাহ্যিক ফাংশন কল করা
const closureExample = outerFunction(3);

// এখন আমরা ক্লোজার ফাংশন কল করতে পারি
console.log(closureExample(5)); // Output: 8


// উপরের উদাহরণে, innerFunction হলো একটি ক্লোজার যা outerFunction এর একটি ভেরিয়েবল (outerVariable) এবং নিজের ভেরিয়েবল (innerVariable) সহ ব্যবহার করে। এই ক্লোজারের মাধ্যমে আমরা বাহ্যিক ফাংশনের স্কোপের ভেরিয়েবলের সাথে সংক্রান্ত অন্যান্য ফাংশনের সাথে যোগাযোগ করতে পারি।